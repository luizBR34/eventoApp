version: '3.7'
services:
  eventoangular-service:
    image: luizpovoa/eventoangular:0.0.1-SNAPSHOT
    #build:
      #context: frontend/eventoAngular
      #dockerfile: Dockerfile
    ports:
      - "4200:80"
    restart: always
    depends_on: # Start the depends_on first
      - eventoapp-service 
    networks:
      - eventoapp-network

  eventoas-service:
    image: luizpovoa/eventoas:0.0.1-SNAPSHOT
    ports:
      - "8100:8100"
    restart: always
    networks:
      - eventoapp-network

  eventoapp-service:
    image: luizpovoa/eventoapp:0.0.1-SNAPSHOT
    ports:
      - "8443:8443"
    restart: always
    environment:
      EVENTO_CACHE_URI: http://eventocache-service:8585
    depends_on:
      - eventoas-service
    networks:
      - eventoapp-network 
      
  vault:
    image: vault:latest
    container_name: vault
    restart: on-failure:10
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: 'https://127.0.0.1:8200'
      VAULT_LOCAL_CONFIG: '{"listener": [{"tcp":{"address": "127.0.0.1:8200","tls_disable":"0", "tls_cert_file":"/data/vault-volume/certificate.pem", "tls_key_file":"/data/vault-volume/key.pem"}}], "default_lease_ttl": "168h", "max_lease_ttl": "720h"}, "ui": true}'
      VAULT_DEV_ROOT_TOKEN_ID: 's.hBOgjdoVINT9E5KOPBu1OZUw'
      VAULT_TOKEN: 's.hBOgjdoVINT9E5KOPBu1OZUw'
    cap_add:
      - IPC_LOCK
    volumes:
      - vault-volume:/data
    healthcheck:
      retries: 5
    command: server -dev -dev-root-token-id="s.hBOgjdoVINT9E5KOPBu1OZUw"
    networks:
      - eventoapp-network
      
  mysql:
    image: mysql:5.7
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_PASSWORD: dummypassword 
      MYSQL_USER: todos-user
      MYSQL_PASSWORD: dummytodos
      MYSQL_DATABASE: todos
    volumes:
      - mysql-database-data-volume:/var/lib/mysql
    networks:
      - eventoapp-network  

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      INSERTION_QUEUE: insertion.queue
      NUMBER_OF_VALIDATION_CONSUMERS: 1
      RESPONSE_EXCHANGE: response.exchange
      RESPONSE_ROUTING_KEY: response.routing.key
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest

# Volumes
volumes:
  mysql-database-data-volume:

# Networks to be created to facilitate communication between containers
networks:
  eventoapp-network: